// --- yUML VSCode Extension directive ---
// {type:class}
// {direction:topDown}
// {generate:false}


// --- yUML Description ---
// This code can be visualized using yUML VSCode extension or
// paste the code here: https://yuml.me/diagram/scruffy/class/draw

// Class definition
// Model
[scheduler_model_t|+sched_algo: scheduler_algorithm_e;+process_list: process_t［PROCESS_LIST_SIZE_MAX］;+process_list_size: int;+proc_observer: process_observer_t［PROCESS_OBSERVER_SIZE］;+sched_observer: scheduler_observer_t［SCHEDULER_OBSERVER_SIZE］;+queue_observer: queue_observer_t［QUEUE_OBSERVER_SIZE］]
[process_init_t|+pid: int;+priority: int;+request_time_ns: timestamp_t;+prog_trace: program_trace_t]
[process_t|+pid: int;+priority: int;+request_time_ns: timestamp_t;+arrival_time_ns: timestamp_t;+pstate: process_state_e;+prog_trace: program_trace_t]
[program_trace_t|+name: char［PROGRAM_NAME_SIZE_MAX］;+num_of_record: int;+current_index: int;+record: program_trace_record_t［PROGRAM_TRACE_RECORDS_MAX］]
[program_trace_record_t|+duration_ms: unsigned_int;+prog_state: program_state_e]
[queue_t|]
[process_observer_t|+\<funcPtr\> updateProcessInfo(this: void*, process: const_process_t*): void;+\<funcPtr\> updateCurrentProcess(this: void*, process: const_process_t*): void]
[scheduler_observer_t|+\<funcPtr\> updateChanges(this: void*, timestamp_ns: timestamp_t, process: const_process_t*, description: const_char*): void]
[queue_observer_t|+\<funcPtr\> updateQueue(this: void*, queue: const_queue_t*): void]

// View


// Relationship
[scheduler_model_t]<>process_list-1:N>[process_t]
[scheduler_model_t]++proc_observer-1:N>[process_observer_t]
[scheduler_model_t]++sched_observer-1:N>[scheduler_observer_t]
[scheduler_model_t]++queue_observer-1:N>[queue_observer_t]
[process_t]<>prog_trace-1:1>[program_trace_t]
[program_trace_t]++record-1:N>[program_trace_record_t]
[queue_observer_t]->[queue_t]
[scheduler_model_t]->[process_init_t]